# https://projecteuler.net/problem=44
# Pentagonal numbers are generated by the formula, Pₙ=n(3n−1)/2. The first ten pentagonal numbers are:
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# It can be seen that P₄ + P₇ = 22 + 70 = 92 = P₈. However, their difference, 70 − 22 = 48, is not pentagonal.
# Find the pair of pentagonal numbers, Pⱼ and Pₖ, for which their sum and difference are pentagonal and D =
# |Pₖ − Pⱼ| is minimised; what is the value of D?
#
# https://euler.jakumo.org/problems/view/44.html
# Пятиугольные числа вычисляются по формуле: Pₙ=n(3n−1)/2. Первые десять пятиугольных чисел:
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# Можно убедиться в том, что P₄ + P₇ = 22 + 70 = 92 = P₈. Однако, их разность, 70 − 22 = 48, не является пятиугольным
# числом.
# Найдите пару пятиугольных чисел Pⱼ и Pₖ, для которых сумма и разность являются пятиугольными числами и
# значение D = |Pₖ − Pⱼ| минимально, и дайте значение D в качестве ответа.
#
# 5482660

import time
import math

start_time = time.time()


def p(n):
    return int(n * (3 * n - 1) / 2)


def n(p):
    a, b, c = 3, -1, -2 * p
    d = b ** 2 - 4 * a * c

    if d < 0:
        answer = 0.123
    elif d == 0:
        answer = (-b + math.sqrt(d)) / (2 * a)
    else:
        sqrt_d = math.sqrt(d)
        answer = max((-b + sqrt_d) / (2 * a), (-b - sqrt_d) / (2 * a))

    if answer % 1 == 0:
        return int(answer)
    else:
        return None


fl_break = False
num = 3000
for j in range(1, num):
    for k in range(1, num):
        pj = p(j)
        pk = p(k)
        if not n(pj + pk) is None and not n(pk - pj) is None:
            print(f'{pj}+{pk}={pj + pk} {pk}-{pj}={pk - pj}')
            fl_break = True
            break
    if fl_break:
        break

end_time = time.time()

print()
print('time:', end_time - start_time)
